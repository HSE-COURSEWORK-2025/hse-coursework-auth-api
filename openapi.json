{
  "openapi": "3.1.0",
  "info": {
    "title": "HSE-COURSEWORK Auth API",
    "version": "dev"
  },
  "paths": {
    "/api/v1/auth/google-code-fitness": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация через Google Fitness (code → токены)",
        "operationId": "auth-auth_google_code_fitness",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAuthCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Обновить JWT нашего приложения",
        "operationId": "auth-refresh_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/users/me": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Информация о текущем пользователе",
        "operationId": "auth-read_users_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenData"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/get-test-account": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Создать или получить тестовый аккаунт",
        "operationId": "auth-get_test_account",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/auth-test-account": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация через тестовый аккаунт",
        "operationId": "auth-auth_test_account",
        "parameters": [
          {
            "name": "test_account_login",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Test Account Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/auth-demo-account": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация через демо аккаунт",
        "operationId": "auth-auth_demo_account",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/qr_auth/get_auth_qr_code": {
      "get": {
        "tags": [
          "qr_auth",
          "qr_auth"
        ],
        "summary": "Получение QR кода для аутентификации",
        "description": "Генерирует одноразовый QR-код, сохраняет в Redis и возвращает PNG.",
        "operationId": "qr_auth-get_qr_code",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/qr_auth/auth_using_qr_code": {
      "get": {
        "tags": [
          "qr_auth",
          "qr_auth"
        ],
        "summary": "Вход по QR коду",
        "description": "1) Читает email из Redis\n2) Удаляет ключ\n3) Ищет пользователя в БД\n4) Регистрирует интеграцию google_health_api\n5) Возвращает QRAuthData с токенами и URL",
        "operationId": "qr_auth-process_qr_code",
        "parameters": [
          {
            "name": "qr_code_data",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Qr Code Data"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRAuthData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/qr_auth/get_app_qr_code": {
      "get": {
        "tags": [
          "qr_auth",
          "qr_auth"
        ],
        "summary": "Получение QR-кода для скачивания приложения",
        "description": "Отдаёт заранее сгенерированный PNG-файл с QR-кодом для скачивания приложения.",
        "operationId": "qr_auth-get_app_download_qr_code",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/internal/users/get_all_users": {
      "get": {
        "tags": [
          "users_info"
        ],
        "summary": "Get All Users",
        "operationId": "users_info-get_all_users",
        "parameters": [
          {
            "name": "test_users",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Test Users"
            }
          },
          {
            "name": "real_users",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Real Users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/internal/users/get_user_google_fitness_api_fresh_access_token": {
      "get": {
        "tags": [
          "users_info"
        ],
        "summary": "Get User Google Fitness Api Fresh Access Token",
        "operationId": "users_info-get_user_google_fitness_api_fresh_access_token",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/internal/users/get_user_auth_token": {
      "get": {
        "tags": [
          "users_info"
        ],
        "summary": "Get User Auth Token",
        "operationId": "users_info-get_user_auth_token",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/integrations/integrations": {
      "get": {
        "tags": [
          "integrations",
          "integrations"
        ],
        "summary": "Получение списка интеграций текущего пользователя",
        "description": "Возвращает все источники для авторизованного пользователя.",
        "operationId": "integrations-get_user_integrations",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IntegrationOut"
                  },
                  "type": "array",
                  "title": "Response Integrations-Get User Integrations"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AccessToken": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "AccessToken"
      },
      "GoogleAuthCodeRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "GoogleAuthCodeRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IntegrationOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "source": {
            "$ref": "#/components/schemas/IntegrationSource"
          },
          "connected_at": {
            "type": "string",
            "format": "date-time",
            "title": "Connected At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source",
          "connected_at"
        ],
        "title": "IntegrationOut"
      },
      "IntegrationSource": {
        "type": "string",
        "enum": [
          "google_fitness_api",
          "google_health_api"
        ],
        "title": "IntegrationSource"
      },
      "QRAuthData": {
        "properties": {
          "post_here": {
            "type": "string",
            "title": "Post Here"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "refresh_token_url": {
            "type": "string",
            "title": "Refresh Token Url"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "post_here",
          "access_token",
          "refresh_token",
          "refresh_token_url",
          "token_type",
          "email"
        ],
        "title": "QRAuthData"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "token_type"
        ],
        "title": "Token"
      },
      "TokenData": {
        "properties": {
          "google_sub": {
            "type": "string",
            "title": "Google Sub"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "picture": {
            "type": "string",
            "title": "Picture"
          },
          "test_user": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test User",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "google_sub",
          "email",
          "name",
          "picture"
        ],
        "title": "TokenData"
      },
      "TokenRefreshRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "TokenRefreshRequest"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "token"
          }
        }
      }
    }
  }
}